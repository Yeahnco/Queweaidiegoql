//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PersistenciaBD
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BD_NMAEntities : DbContext
    {
        public BD_NMAEntities()
            : base("name=BD_NMAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Actividad> Actividad { get; set; }
        public virtual DbSet<Administrador> Administrador { get; set; }
        public virtual DbSet<Alerta> Alerta { get; set; }
        public virtual DbSet<Checklist> Checklist { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Comprobantes> Comprobantes { get; set; }
        public virtual DbSet<Contrato> Contrato { get; set; }
        public virtual DbSet<Gerente> Gerente { get; set; }
        public virtual DbSet<Pago> Pago { get; set; }
        public virtual DbSet<Plan> Plan { get; set; }
        public virtual DbSet<Profesional> Profesional { get; set; }
        public virtual DbSet<Reporte> Reporte { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<Solicitud> Solicitud { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<Accidente> Accidente { get; set; }
        public virtual DbSet<Act_de_mejora> Act_de_mejora { get; set; }
        public virtual DbSet<Asesoria> Asesoria { get; set; }
        public virtual DbSet<Capacitacion> Capacitacion { get; set; }
        public virtual DbSet<ERROR_LOG> ERROR_LOG { get; set; }
        public virtual DbSet<Visita> Visita { get; set; }
    
        public virtual ObjectResult<CREATE_ACT_DE_MEJORA_Result> CREATE_ACT_DE_MEJORA(string nombre_act_mejora, string descripcion_act_mejora, Nullable<int> actividad_id_act, string revision_profesional, Nullable<int> prof_emisor_id, Nullable<int> prof_remitente_id, string estado_actividad, string estado_asignacion)
        {
            var nombre_act_mejoraParameter = nombre_act_mejora != null ?
                new ObjectParameter("Nombre_act_mejora", nombre_act_mejora) :
                new ObjectParameter("Nombre_act_mejora", typeof(string));
    
            var descripcion_act_mejoraParameter = descripcion_act_mejora != null ?
                new ObjectParameter("Descripcion_act_mejora", descripcion_act_mejora) :
                new ObjectParameter("Descripcion_act_mejora", typeof(string));
    
            var actividad_id_actParameter = actividad_id_act.HasValue ?
                new ObjectParameter("Actividad_id_act", actividad_id_act) :
                new ObjectParameter("Actividad_id_act", typeof(int));
    
            var revision_profesionalParameter = revision_profesional != null ?
                new ObjectParameter("Revision_profesional", revision_profesional) :
                new ObjectParameter("Revision_profesional", typeof(string));
    
            var prof_emisor_idParameter = prof_emisor_id.HasValue ?
                new ObjectParameter("Prof_emisor_id", prof_emisor_id) :
                new ObjectParameter("Prof_emisor_id", typeof(int));
    
            var prof_remitente_idParameter = prof_remitente_id.HasValue ?
                new ObjectParameter("Prof_remitente_id", prof_remitente_id) :
                new ObjectParameter("Prof_remitente_id", typeof(int));
    
            var estado_actividadParameter = estado_actividad != null ?
                new ObjectParameter("Estado_actividad", estado_actividad) :
                new ObjectParameter("Estado_actividad", typeof(string));
    
            var estado_asignacionParameter = estado_asignacion != null ?
                new ObjectParameter("Estado_asignacion", estado_asignacion) :
                new ObjectParameter("Estado_asignacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_ACT_DE_MEJORA_Result>("CREATE_ACT_DE_MEJORA", nombre_act_mejoraParameter, descripcion_act_mejoraParameter, actividad_id_actParameter, revision_profesionalParameter, prof_emisor_idParameter, prof_remitente_idParameter, estado_actividadParameter, estado_asignacionParameter);
        }
    
        public virtual ObjectResult<CREATE_ACTIVIDAD_Result> CREATE_ACTIVIDAD(Nullable<System.DateTime> fecha_act, Nullable<System.DateTime> hora_act, Nullable<int> contador, Nullable<int> prof_id_profe, Nullable<int> cliente_id_emp, string tipo_actividad, Nullable<int> estado, Nullable<int> retraso)
        {
            var fecha_actParameter = fecha_act.HasValue ?
                new ObjectParameter("Fecha_act", fecha_act) :
                new ObjectParameter("Fecha_act", typeof(System.DateTime));
    
            var hora_actParameter = hora_act.HasValue ?
                new ObjectParameter("Hora_act", hora_act) :
                new ObjectParameter("Hora_act", typeof(System.DateTime));
    
            var contadorParameter = contador.HasValue ?
                new ObjectParameter("Contador", contador) :
                new ObjectParameter("Contador", typeof(int));
    
            var prof_id_profeParameter = prof_id_profe.HasValue ?
                new ObjectParameter("Prof_id_profe", prof_id_profe) :
                new ObjectParameter("Prof_id_profe", typeof(int));
    
            var cliente_id_empParameter = cliente_id_emp.HasValue ?
                new ObjectParameter("Cliente_id_emp", cliente_id_emp) :
                new ObjectParameter("Cliente_id_emp", typeof(int));
    
            var tipo_actividadParameter = tipo_actividad != null ?
                new ObjectParameter("Tipo_actividad", tipo_actividad) :
                new ObjectParameter("Tipo_actividad", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var retrasoParameter = retraso.HasValue ?
                new ObjectParameter("Retraso", retraso) :
                new ObjectParameter("Retraso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_ACTIVIDAD_Result>("CREATE_ACTIVIDAD", fecha_actParameter, hora_actParameter, contadorParameter, prof_id_profeParameter, cliente_id_empParameter, tipo_actividadParameter, estadoParameter, retrasoParameter);
        }
    
        public virtual ObjectResult<CREATE_ASESORIA_Result> CREATE_ASESORIA(string razon_ases, string estado_caso, string diligencia, string evento_ases, Nullable<int> solicitud_id_solicitud, Nullable<int> asesoriaActividad_id_act, Nullable<System.DateTime> fecha_incidente, string descripcion)
        {
            var razon_asesParameter = razon_ases != null ?
                new ObjectParameter("Razon_ases", razon_ases) :
                new ObjectParameter("Razon_ases", typeof(string));
    
            var estado_casoParameter = estado_caso != null ?
                new ObjectParameter("Estado_caso", estado_caso) :
                new ObjectParameter("Estado_caso", typeof(string));
    
            var diligenciaParameter = diligencia != null ?
                new ObjectParameter("Diligencia", diligencia) :
                new ObjectParameter("Diligencia", typeof(string));
    
            var evento_asesParameter = evento_ases != null ?
                new ObjectParameter("Evento_ases", evento_ases) :
                new ObjectParameter("Evento_ases", typeof(string));
    
            var solicitud_id_solicitudParameter = solicitud_id_solicitud.HasValue ?
                new ObjectParameter("Solicitud_id_solicitud", solicitud_id_solicitud) :
                new ObjectParameter("Solicitud_id_solicitud", typeof(int));
    
            var asesoriaActividad_id_actParameter = asesoriaActividad_id_act.HasValue ?
                new ObjectParameter("AsesoriaActividad_id_act", asesoriaActividad_id_act) :
                new ObjectParameter("AsesoriaActividad_id_act", typeof(int));
    
            var fecha_incidenteParameter = fecha_incidente.HasValue ?
                new ObjectParameter("Fecha_incidente", fecha_incidente) :
                new ObjectParameter("Fecha_incidente", typeof(System.DateTime));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_ASESORIA_Result>("CREATE_ASESORIA", razon_asesParameter, estado_casoParameter, diligenciaParameter, evento_asesParameter, solicitud_id_solicitudParameter, asesoriaActividad_id_actParameter, fecha_incidenteParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<CREATE_CAPACITACION_Result> CREATE_CAPACITACION(string nombre_cap, Nullable<int> asistentes, string descripcion, string material, Nullable<int> capacitacionActividad_id_act)
        {
            var nombre_capParameter = nombre_cap != null ?
                new ObjectParameter("Nombre_cap", nombre_cap) :
                new ObjectParameter("Nombre_cap", typeof(string));
    
            var asistentesParameter = asistentes.HasValue ?
                new ObjectParameter("Asistentes", asistentes) :
                new ObjectParameter("Asistentes", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var materialParameter = material != null ?
                new ObjectParameter("Material", material) :
                new ObjectParameter("Material", typeof(string));
    
            var capacitacionActividad_id_actParameter = capacitacionActividad_id_act.HasValue ?
                new ObjectParameter("CapacitacionActividad_id_act", capacitacionActividad_id_act) :
                new ObjectParameter("CapacitacionActividad_id_act", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_CAPACITACION_Result>("CREATE_CAPACITACION", nombre_capParameter, asistentesParameter, descripcionParameter, materialParameter, capacitacionActividad_id_actParameter);
        }
    
        public virtual ObjectResult<CREATE_CHECKLIST_Result> CREATE_CHECKLIST(string aspectos, string reporte, Nullable<int> contador)
        {
            var aspectosParameter = aspectos != null ?
                new ObjectParameter("Aspectos", aspectos) :
                new ObjectParameter("Aspectos", typeof(string));
    
            var reporteParameter = reporte != null ?
                new ObjectParameter("Reporte", reporte) :
                new ObjectParameter("Reporte", typeof(string));
    
            var contadorParameter = contador.HasValue ?
                new ObjectParameter("Contador", contador) :
                new ObjectParameter("Contador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_CHECKLIST_Result>("CREATE_CHECKLIST", aspectosParameter, reporteParameter, contadorParameter);
        }
    
        public virtual ObjectResult<CREATE_CLIENTE_Result> CREATE_CLIENTE(string rut_emp, string nombre_emp, string direccion_emp, Nullable<int> clienteProfesional_id_prof, string fono_cliente)
        {
            var rut_empParameter = rut_emp != null ?
                new ObjectParameter("Rut_emp", rut_emp) :
                new ObjectParameter("Rut_emp", typeof(string));
    
            var nombre_empParameter = nombre_emp != null ?
                new ObjectParameter("Nombre_emp", nombre_emp) :
                new ObjectParameter("Nombre_emp", typeof(string));
    
            var direccion_empParameter = direccion_emp != null ?
                new ObjectParameter("Direccion_emp", direccion_emp) :
                new ObjectParameter("Direccion_emp", typeof(string));
    
            var clienteProfesional_id_profParameter = clienteProfesional_id_prof.HasValue ?
                new ObjectParameter("ClienteProfesional_id_prof", clienteProfesional_id_prof) :
                new ObjectParameter("ClienteProfesional_id_prof", typeof(int));
    
            var fono_clienteParameter = fono_cliente != null ?
                new ObjectParameter("Fono_cliente", fono_cliente) :
                new ObjectParameter("Fono_cliente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_CLIENTE_Result>("CREATE_CLIENTE", rut_empParameter, nombre_empParameter, direccion_empParameter, clienteProfesional_id_profParameter, fono_clienteParameter);
        }
    
        public virtual ObjectResult<CREATE_CONTRATO_Result> CREATE_CONTRATO(Nullable<System.DateTime> vencimiento_cont, byte[] archivo_pdf, Nullable<int> gerente_id_gerente, string nombre_arch, Nullable<int> plan_id_plan)
        {
            var vencimiento_contParameter = vencimiento_cont.HasValue ?
                new ObjectParameter("Vencimiento_cont", vencimiento_cont) :
                new ObjectParameter("Vencimiento_cont", typeof(System.DateTime));
    
            var archivo_pdfParameter = archivo_pdf != null ?
                new ObjectParameter("Archivo_pdf", archivo_pdf) :
                new ObjectParameter("Archivo_pdf", typeof(byte[]));
    
            var gerente_id_gerenteParameter = gerente_id_gerente.HasValue ?
                new ObjectParameter("Gerente_id_gerente", gerente_id_gerente) :
                new ObjectParameter("Gerente_id_gerente", typeof(int));
    
            var nombre_archParameter = nombre_arch != null ?
                new ObjectParameter("Nombre_arch", nombre_arch) :
                new ObjectParameter("Nombre_arch", typeof(string));
    
            var plan_id_planParameter = plan_id_plan.HasValue ?
                new ObjectParameter("Plan_id_plan", plan_id_plan) :
                new ObjectParameter("Plan_id_plan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_CONTRATO_Result>("CREATE_CONTRATO", vencimiento_contParameter, archivo_pdfParameter, gerente_id_gerenteParameter, nombre_archParameter, plan_id_planParameter);
        }
    
        public virtual ObjectResult<CREATE_GERENTE_Result> CREATE_GERENTE(string nombre_gerente, string mail_gerente, Nullable<int> contrato_id_contrato, Nullable<int> cliente_id_clien)
        {
            var nombre_gerenteParameter = nombre_gerente != null ?
                new ObjectParameter("Nombre_gerente", nombre_gerente) :
                new ObjectParameter("Nombre_gerente", typeof(string));
    
            var mail_gerenteParameter = mail_gerente != null ?
                new ObjectParameter("Mail_gerente", mail_gerente) :
                new ObjectParameter("Mail_gerente", typeof(string));
    
            var contrato_id_contratoParameter = contrato_id_contrato.HasValue ?
                new ObjectParameter("Contrato_id_contrato", contrato_id_contrato) :
                new ObjectParameter("Contrato_id_contrato", typeof(int));
    
            var cliente_id_clienParameter = cliente_id_clien.HasValue ?
                new ObjectParameter("Cliente_id_clien", cliente_id_clien) :
                new ObjectParameter("Cliente_id_clien", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_GERENTE_Result>("CREATE_GERENTE", nombre_gerenteParameter, mail_gerenteParameter, contrato_id_contratoParameter, cliente_id_clienParameter);
        }
    
        public virtual ObjectResult<CREATE_PAGO_Result> CREATE_PAGO(string estado_pago, string mes_pago, Nullable<decimal> valor_extra, Nullable<decimal> total_a_pagar, Nullable<int> plan_plan_id, Nullable<int> contrato_id_cont)
        {
            var estado_pagoParameter = estado_pago != null ?
                new ObjectParameter("Estado_pago", estado_pago) :
                new ObjectParameter("Estado_pago", typeof(string));
    
            var mes_pagoParameter = mes_pago != null ?
                new ObjectParameter("Mes_pago", mes_pago) :
                new ObjectParameter("Mes_pago", typeof(string));
    
            var valor_extraParameter = valor_extra.HasValue ?
                new ObjectParameter("Valor_extra", valor_extra) :
                new ObjectParameter("Valor_extra", typeof(decimal));
    
            var total_a_pagarParameter = total_a_pagar.HasValue ?
                new ObjectParameter("Total_a_pagar", total_a_pagar) :
                new ObjectParameter("Total_a_pagar", typeof(decimal));
    
            var plan_plan_idParameter = plan_plan_id.HasValue ?
                new ObjectParameter("Plan_plan_id", plan_plan_id) :
                new ObjectParameter("Plan_plan_id", typeof(int));
    
            var contrato_id_contParameter = contrato_id_cont.HasValue ?
                new ObjectParameter("Contrato_id_cont", contrato_id_cont) :
                new ObjectParameter("Contrato_id_cont", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_PAGO_Result>("CREATE_PAGO", estado_pagoParameter, mes_pagoParameter, valor_extraParameter, total_a_pagarParameter, plan_plan_idParameter, contrato_id_contParameter);
        }
    
        public virtual ObjectResult<CREATE_PROFESIONAL_Result> CREATE_PROFESIONAL(string rut_prof, string nombre_prof, string apellido_prof, Nullable<int> rendimiento_prof, string estado_prof, Nullable<System.DateTime> fecha_nacimiento_prof, string mail_prof, string telefono, string direccion)
        {
            var rut_profParameter = rut_prof != null ?
                new ObjectParameter("Rut_prof", rut_prof) :
                new ObjectParameter("Rut_prof", typeof(string));
    
            var nombre_profParameter = nombre_prof != null ?
                new ObjectParameter("Nombre_prof", nombre_prof) :
                new ObjectParameter("Nombre_prof", typeof(string));
    
            var apellido_profParameter = apellido_prof != null ?
                new ObjectParameter("Apellido_prof", apellido_prof) :
                new ObjectParameter("Apellido_prof", typeof(string));
    
            var rendimiento_profParameter = rendimiento_prof.HasValue ?
                new ObjectParameter("Rendimiento_prof", rendimiento_prof) :
                new ObjectParameter("Rendimiento_prof", typeof(int));
    
            var estado_profParameter = estado_prof != null ?
                new ObjectParameter("Estado_prof", estado_prof) :
                new ObjectParameter("Estado_prof", typeof(string));
    
            var fecha_nacimiento_profParameter = fecha_nacimiento_prof.HasValue ?
                new ObjectParameter("Fecha_nacimiento_prof", fecha_nacimiento_prof) :
                new ObjectParameter("Fecha_nacimiento_prof", typeof(System.DateTime));
    
            var mail_profParameter = mail_prof != null ?
                new ObjectParameter("Mail_prof", mail_prof) :
                new ObjectParameter("Mail_prof", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_PROFESIONAL_Result>("CREATE_PROFESIONAL", rut_profParameter, nombre_profParameter, apellido_profParameter, rendimiento_profParameter, estado_profParameter, fecha_nacimiento_profParameter, mail_profParameter, telefonoParameter, direccionParameter);
        }
    
        public virtual ObjectResult<CREATE_ROL_Result> CREATE_ROL(Nullable<int> id_rol, string descripcion)
        {
            var id_rolParameter = id_rol.HasValue ?
                new ObjectParameter("id_rol", id_rol) :
                new ObjectParameter("id_rol", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_ROL_Result>("CREATE_ROL", id_rolParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<CREATE_USUARIO_Result> CREATE_USUARIO(string usuario, string clave, Nullable<int> id_rol, Nullable<int> fk_profesional, Nullable<int> fK_cliente, Nullable<int> fK_administrador)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            var id_rolParameter = id_rol.HasValue ?
                new ObjectParameter("id_rol", id_rol) :
                new ObjectParameter("id_rol", typeof(int));
    
            var fk_profesionalParameter = fk_profesional.HasValue ?
                new ObjectParameter("Fk_profesional", fk_profesional) :
                new ObjectParameter("Fk_profesional", typeof(int));
    
            var fK_clienteParameter = fK_cliente.HasValue ?
                new ObjectParameter("FK_cliente", fK_cliente) :
                new ObjectParameter("FK_cliente", typeof(int));
    
            var fK_administradorParameter = fK_administrador.HasValue ?
                new ObjectParameter("FK_administrador", fK_administrador) :
                new ObjectParameter("FK_administrador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_USUARIO_Result>("CREATE_USUARIO", usuarioParameter, claveParameter, id_rolParameter, fk_profesionalParameter, fK_clienteParameter, fK_administradorParameter);
        }
    
        public virtual ObjectResult<CREATE_VISITA_Result> CREATE_VISITA(Nullable<int> checklist_id_check, Nullable<int> visitaActividad_id_act, string test)
        {
            var checklist_id_checkParameter = checklist_id_check.HasValue ?
                new ObjectParameter("Checklist_id_check", checklist_id_check) :
                new ObjectParameter("Checklist_id_check", typeof(int));
    
            var visitaActividad_id_actParameter = visitaActividad_id_act.HasValue ?
                new ObjectParameter("VisitaActividad_id_act", visitaActividad_id_act) :
                new ObjectParameter("VisitaActividad_id_act", typeof(int));
    
            var testParameter = test != null ?
                new ObjectParameter("Test", test) :
                new ObjectParameter("Test", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATE_VISITA_Result>("CREATE_VISITA", checklist_id_checkParameter, visitaActividad_id_actParameter, testParameter);
        }
    
        public virtual ObjectResult<crudUpdate_Result> crudUpdate(string nombreTabla, string nombreColumna, string nuevoDato, Nullable<int> id)
        {
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("nombreTabla", nombreTabla) :
                new ObjectParameter("nombreTabla", typeof(string));
    
            var nombreColumnaParameter = nombreColumna != null ?
                new ObjectParameter("nombreColumna", nombreColumna) :
                new ObjectParameter("nombreColumna", typeof(string));
    
            var nuevoDatoParameter = nuevoDato != null ?
                new ObjectParameter("nuevoDato", nuevoDato) :
                new ObjectParameter("nuevoDato", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crudUpdate_Result>("crudUpdate", nombreTablaParameter, nombreColumnaParameter, nuevoDatoParameter, idParameter);
        }
    }
}
